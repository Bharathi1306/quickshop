pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'dockerhub-creds' // Replace with your Jenkins Docker Hub credential ID
        GITHUB_CREDENTIALS = 'github-creds'        // Replace with your GitHub credential ID
        DOCKER_USER = 'bharathi136'
        REPO = 'quickshop'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/Bharathi1306/quickshop.git',
                        credentialsId: "${GITHUB_CREDENTIALS}"
                    ]]
                ])
            }
        }

        stage('Set Version Tag') {
            steps {
                script {
                    def GIT_COMMIT_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    env.GIT_COMMIT_HASH = GIT_COMMIT_HASH
                    echo "Docker image tag will be: ${DOCKER_USER}/quickshop:${GIT_COMMIT_HASH}"
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_USER}/user-service:${GIT_COMMIT_HASH} ./frontend/quickshop-services/user-service/user-service"
                    sh "docker build -t ${DOCKER_USER}/order-service:${GIT_COMMIT_HASH} ./frontend/quickshop-services/order-service"
                    sh "docker build -t ${DOCKER_USER}/product-service:${GIT_COMMIT_HASH} ./frontend/quickshop-services/product-service"
                }
            }
        }

        stage('Login & Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_HUB_CREDENTIALS}", passwordVariable: 'DOCKER_PASS', usernameVariable: 'DOCKER_USER_ENV')]) {
                        sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER_ENV --password-stdin'
                        sh "docker push ${DOCKER_USER}/user-service:${GIT_COMMIT_HASH}"
                        sh "docker push ${DOCKER_USER}/order-service:${GIT_COMMIT_HASH}"
                        sh "docker push ${DOCKER_USER}/product-service:${GIT_COMMIT_HASH}"
                        sh 'docker logout'
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed successfully!"
        }
        failure {
            echo "⚠️ Pipeline failed! Check the logs for errors."
        }
    }
}
