pipeline {
    agent any

    environment {
        DOCKER_HUB_CRED = 'docker-hub-id' // Replace with your Jenkins Docker Hub credentials ID
        DOCKER_NAMESPACE = 'bharathi136'   // Your Docker Hub username
    }

    stages {
        stage('Build Order Service') {
            steps {
                dir('frontend/quickshop-services/order-service') {
                    echo '‚öôÔ∏è Building Order Service with Maven...'
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Product Service') {
            steps {
                dir('frontend/quickshop-services/product-service') {
                    echo '‚öôÔ∏è Building Product Service with Maven...'
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build User Service') {
            steps {
                dir('frontend/quickshop-services/user-service') {
                    echo '‚öôÔ∏è Building User Service with Maven...'
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                dir('frontend/quickshop-services') {
                    echo 'üê≥ Building Docker images...'
                    sh "docker build -t ${DOCKER_NAMESPACE}/order-service order-service/"
                    sh "docker build -t ${DOCKER_NAMESPACE}/product-service product-service/"
                    sh "docker build -t ${DOCKER_NAMESPACE}/user-service user-service/"
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                echo 'üöÄ Pushing Docker images to Docker Hub...'
                withDockerRegistry([credentialsId: "${DOCKER_HUB_CRED}", url: '']) {
                    sh "docker push ${DOCKER_NAMESPACE}/order-service"
                    sh "docker push ${DOCKER_NAMESPACE}/product-service"
                    sh "docker push ${DOCKER_NAMESPACE}/user-service"
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed. Check logs for errors.'
        }
    }
}
